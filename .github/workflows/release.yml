name: Build and Release

on:
  workflow_dispatch:
  release:
    types: [published]
  push:
    branches:
      - main
    paths:
      - "**/*.go"
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "**/*.go"
jobs:
  build:
    permissions:
      contents: write
    strategy:
      matrix:
        goos: [windows, linux, darwin]
        goarch: [amd64, arm64]
      fail-fast: false

    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      CGO_ENABLED: 0
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.22.0'
          check-latest: true
      - run: |
          cd src && go mod download
      
      - name: Build kcores-link
        run: |
          cd src && go build -trimpath -ldflags "-s -w -buildid=" -o ../
      - name: Upload files to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kcores-link-${{ env.GOOS }}-${{ env.GOARCH }}
          path: |
            ./kcores-link*
      - name: Make release folder
        if: github.event_name == 'release'
        run: |
          mkdir release && mv ./kcores-link* ./release/
      - name: Archive Release
        uses: thedoctor0/zip-release@0.7.6
        if: github.event_name == 'release'
        with:
          type: 'zip'
          filename: "kcores-link-${{ env.GOOS }}-${{ env.GOARCH }}.zip"
          directory: ./release
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'release'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: "./release/kcores-link-${{ env.GOOS }}-${{ env.GOARCH }}.zip"
          asset_name: kcores-link-${{ env.GOOS }}-${{ env.GOARCH }}.zip
          tag: ${{ github.ref }}
